.container {
  width: 800px;
  height: 400px;
}

.container > div {
  border-radius: 10px;
  display: flex;
  justify-content: center;
  align-items: center;
}

.verde-claro {
  background-color: aquamarine;
}

.azul {
  background-color: cornflowerblue;
}

.rosa {
  background-color: hotpink;
}

.laranja-escuro {
  background-color: orangered;
}

.verde-forte {
  background-color: green;
}

.marrom {
  background-color: burlywood;
}

/* cores definidas acima */

.container {
  display: grid;
  grid-template-columns: repeat(5, auto);
  grid-template-rows: repeat(3, auto);
  grid-gap: 15px;
}

.verde-claro {
  /* grid-column-start: 1;
  grid-column-end: 3;  */

  /* grid-column: 1 / 3; */
  /* grid-column: 1 / span 2; */

  /* grid-row-start: 1; */
  /* grid-row-end: 3; */
  /* sempre um a mais, pois nao Ã© inclusivo */

  /* grid-row: 1 /  3; */
  /* grid-row: 1 /  span 2;  */
  /* mais intuitivo */

  /*anatomia da propriedade grid area : 4 valores 
    grid-row-start
    grid-column-start
    grid-row-end
    grid-column-end
  */
  grid-area: 1 / 1 / 3 / 3;

}

.azul {
  grid-area: 1 / 3 / 1 / 6;
}

.rosa {
  grid-area: 3 / 1 / 3 /3;
}

.laranja-escuro {
  grid-area: 2 / 3 / 4 / 5 ;
}

.span {
  grid-column: 1 / span 2;
  /* ocupa a primeira coluna e espande 2  */
  /* quebra pra baixo pois ja tinha um item ocupando a coluna 1 em cima  */
  /* acontece o mesmo pra qualquer um item filho que eu aplicar essa mesma classe */

}